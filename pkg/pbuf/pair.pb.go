// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: pair.proto

package pbuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_pair_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pair_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_pair_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type PairingSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initiator     *DeviceInfo            `protobuf:"bytes,1,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Responder     *DeviceInfo            `protobuf:"bytes,2,opt,name=responder,proto3" json:"responder,omitempty"`
	Token         []byte                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PairingSession) Reset() {
	*x = PairingSession{}
	mi := &file_pair_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PairingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairingSession) ProtoMessage() {}

func (x *PairingSession) ProtoReflect() protoreflect.Message {
	mi := &file_pair_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairingSession.ProtoReflect.Descriptor instead.
func (*PairingSession) Descriptor() ([]byte, []int) {
	return file_pair_proto_rawDescGZIP(), []int{1}
}

func (x *PairingSession) GetInitiator() *DeviceInfo {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *PairingSession) GetResponder() *DeviceInfo {
	if x != nil {
		return x.Responder
	}
	return nil
}

func (x *PairingSession) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type PairedDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   []byte                 `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Token         []byte                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PairedDevice) Reset() {
	*x = PairedDevice{}
	mi := &file_pair_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PairedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairedDevice) ProtoMessage() {}

func (x *PairedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pair_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairedDevice.ProtoReflect.Descriptor instead.
func (*PairedDevice) Descriptor() ([]byte, []int) {
	return file_pair_proto_rawDescGZIP(), []int{2}
}

func (x *PairedDevice) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *PairedDevice) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

var File_pair_proto protoreflect.FileDescriptor

const file_pair_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"pair.proto\x12\x04pbuf\"@\n" +
	"\n" +
	"DeviceInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02os\x18\x03 \x01(\tR\x02os\"\x86\x01\n" +
	"\x0ePairingSession\x12.\n" +
	"\tinitiator\x18\x01 \x01(\v2\x10.pbuf.DeviceInfoR\tinitiator\x12.\n" +
	"\tresponder\x18\x02 \x01(\v2\x10.pbuf.DeviceInfoR\tresponder\x12\x14\n" +
	"\x05token\x18\x03 \x01(\fR\x05token\"F\n" +
	"\fPairedDevice\x12 \n" +
	"\vcertificate\x18\x01 \x01(\fR\vcertificate\x12\x14\n" +
	"\x05token\x18\x02 \x01(\fR\x05token2\x81\x01\n" +
	"\aPairing\x129\n" +
	"\x0fInitiatePairing\x12\x10.pbuf.DeviceInfo\x1a\x14.pbuf.PairingSession\x12;\n" +
	"\x0fFinalizePairing\x12\x14.pbuf.PairingSession\x1a\x12.pbuf.PairedDeviceB\x0fZ\ralat/pkg/pbufb\x06proto3"

var (
	file_pair_proto_rawDescOnce sync.Once
	file_pair_proto_rawDescData []byte
)

func file_pair_proto_rawDescGZIP() []byte {
	file_pair_proto_rawDescOnce.Do(func() {
		file_pair_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pair_proto_rawDesc), len(file_pair_proto_rawDesc)))
	})
	return file_pair_proto_rawDescData
}

var file_pair_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pair_proto_goTypes = []any{
	(*DeviceInfo)(nil),     // 0: pbuf.DeviceInfo
	(*PairingSession)(nil), // 1: pbuf.PairingSession
	(*PairedDevice)(nil),   // 2: pbuf.PairedDevice
}
var file_pair_proto_depIdxs = []int32{
	0, // 0: pbuf.PairingSession.initiator:type_name -> pbuf.DeviceInfo
	0, // 1: pbuf.PairingSession.responder:type_name -> pbuf.DeviceInfo
	0, // 2: pbuf.Pairing.InitiatePairing:input_type -> pbuf.DeviceInfo
	1, // 3: pbuf.Pairing.FinalizePairing:input_type -> pbuf.PairingSession
	1, // 4: pbuf.Pairing.InitiatePairing:output_type -> pbuf.PairingSession
	2, // 5: pbuf.Pairing.FinalizePairing:output_type -> pbuf.PairedDevice
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pair_proto_init() }
func file_pair_proto_init() {
	if File_pair_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pair_proto_rawDesc), len(file_pair_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pair_proto_goTypes,
		DependencyIndexes: file_pair_proto_depIdxs,
		MessageInfos:      file_pair_proto_msgTypes,
	}.Build()
	File_pair_proto = out.File
	file_pair_proto_goTypes = nil
	file_pair_proto_depIdxs = nil
}
